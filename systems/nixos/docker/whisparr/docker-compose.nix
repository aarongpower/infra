# Auto-generated using compose2nix v0.2.3-pre.
{ pkgs, lib, ... }:

{
  # Runtime
  virtualisation.podman = {
    enable = true;
    autoPrune.enable = true;
    dockerCompat = true;
    defaultNetwork.settings = {
      # Required for container networking to be able to use names.
      dns_enabled = true;
    };
  };
  virtualisation.oci-containers.backend = "podman";

  # Containers
  virtualisation.oci-containers.containers."whisparr" = {
    image = "ghcr.io/hotio/whisparr";
    environment = {
      "PGID" = "1000";
      "PUID" = "1000";
      "TZ" = "Asia/Jakarta";
      "UMASK" = "002";
    };
    volumes = [
      "/mnt/bigboy/docker/whisparr/config:/config:rw"
      "/mnt/bigboy/docker/whisparr/data:/data:rw"
      "/mnt/bigboy/media/naughty:/mnt/naughty:rw"
    ];
    ports = [
      "6969:6969/tcp"
    ];
    log-driver = "journald";
    extraOptions = [
      "--network=host"
    ];
  };
  systemd.services."podman-whisparr" = {
    serviceConfig = {
      Restart = lib.mkOverride 500 "no";
    };
    partOf = [
      "podman-compose-whisparr-root.target"
    ];
    wantedBy = [
      "podman-compose-whisparr-root.target"
    ];
  };

  # Root service
  # When started, this will automatically create all resources and start
  # the containers. When stopped, this will teardown all resources.
  systemd.targets."podman-compose-whisparr-root" = {
    unitConfig = {
      Description = "Root target generated by compose2nix.";
    };
    wantedBy = [ "multi-user.target" ];
  };
}
